{"version":3,"sources":["models/Models.ts","components/MonsterImage.tsx","components/MonsterListItem.tsx","components/MonsterList.tsx","models/Library.ts","app/MainScreen.tsx","components/RecipeListItem.tsx","components/GenericComponents.tsx","components/RecipeList.tsx","components/ResponsiveComponents.tsx","components/StatsComponent.tsx","components/LocationsComponent.tsx","components/SkillsComponent.tsx","components/RecipeTreeNode.tsx","components/RecipeTree.tsx","components/MonsterCard.tsx","app/MonsterScreen.tsx","app/ScrollToTop.tsx","app/AppBar.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Family","RecruitLocation","Requirement","RecipeComponentType","Monsters","isFamily","object","JSON","stringify","includes","getColorFromFamily","family","SlimeFamily","DragonFamily","BeastFamily","BirdFamily","PlantFamily","BugFamily","DemonFamily","ZombieFamily","MaterialFamily","WaterFamily","BossFamily","Image","styled","img","props","isPsx","clickNav","css","MonsterImage","monster","history","useHistory","alt","toString","src","toLowerCase","onClick","push","Card","div","Name","MonsterListItem","name","Wrapper","MonsterList","items","monsters","sort","a","b","order","Object","values","indexOf","map","x","library","cobiRecipeTrees","taraRecipeTrees","monstersFoundInTaraVersion","monstersFoundInCobiVersion","this","data","find","Input","input","MainScreen","useState","filter","setFilter","forEach","onChange","target","value","placeholder","style","height","RecipeRow","RecipeListItem","recipe","as","Result","part","base","mate","result","RecipeComponent","BorderedContainer","RecipeList","recipes","Row","Column","span","Container","StatBar","stat","StatDisplay","StatsComponent","offset","maxLevel","experience","hp","mp","attack","defence","agility","intelligence","LocationsComponent","locations","length","taraLocations","cobiLocations","join","SkillsComponent","skills","Select","select","ChildContainer","Child","FamilyNode","RecipeTreeNode","recipeIndex","setRecipeIndex","useEffect","fam","get","parseInt","Tree","RecipeTree","Title","h1","MonsterCard","asBase","Base","asMate","Mate","MonsterScreen","mon","undefined","match","params","withRouter","children","unlisten","listen","window","scrollTo","Bar","Icon","svg","AppBar","xmlns","viewBox","width","d","fill","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HAoCYA,EAgCAC,EAYAC,EAMAC,EAMAC,E,sEA5DL,SAASC,EAASC,GACvB,OAAOC,KAAKC,UAAUF,GAAQG,SAAS,UAiBlC,SAASC,EAAmBC,GACjC,OAAQA,GACN,KAAKX,EAAOY,YAAa,MAAO,UAChC,KAAKZ,EAAOa,aAAc,MAAO,UACjC,KAAKb,EAAOc,YAAa,MAAO,UAChC,KAAKd,EAAOe,WAAY,MAAO,UAC/B,KAAKf,EAAOgB,YAAa,MAAO,UAChC,KAAKhB,EAAOiB,UAAW,MAAO,UAC9B,KAAKjB,EAAOkB,YAAa,MAAO,UAChC,KAAKlB,EAAOmB,aAAc,MAAO,UACjC,KAAKnB,EAAOoB,eAAgB,MAAO,UACnC,KAAKpB,EAAOqB,YAAa,MAAO,UAChC,KAAKrB,EAAOsB,WAAY,MAAO,UAC/B,QACE,MAAO,Y,SA5BDtB,K,0BAAAA,E,4BAAAA,E,0BAAAA,E,wBAAAA,E,0BAAAA,E,sBAAAA,E,0BAAAA,E,4BAAAA,E,gCAAAA,E,0BAAAA,E,yBAAAA,M,cAgCAC,O,iBAAAA,I,mBAAAA,I,aAAAA,I,aAAAA,I,iBAAAA,I,uBAAAA,I,aAAAA,I,mBAAAA,I,kCAAAA,M,cAYAC,O,uBAAAA,I,qBAAAA,I,gBAAAA,M,cAMAC,K,mBAAAA,E,eAAAA,E,gBAAAA,M,cAMAC,O,yBAAAA,I,yBAAAA,I,yBAAAA,I,yBAAAA,I,mBAAAA,I,yBAAAA,I,mBAAAA,I,uBAAAA,I,uBAAAA,I,iBAAAA,I,oBAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,sBAAAA,I,0BAAAA,I,oBAAAA,I,wBAAAA,I,wBAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,wBAAAA,I,oBAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,wBAAAA,I,oBAAAA,I,oBAAAA,I,wBAAAA,I,0BAAAA,I,sBAAAA,I,0BAAAA,I,0BAAAA,I,sBAAAA,I,0BAAAA,I,wBAAAA,I,wBAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,oBAAAA,I,oBAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,sBAAAA,I,0BAAAA,I,0BAAAA,I,sBAAAA,I,oBAAAA,I,0BAAAA,I,oBAAAA,I,0BAAAA,I,wBAAAA,I,0BAAAA,I,sBAAAA,I,sBAAAA,I,wBAAAA,I,wBAAAA,I,wBAAAA,I,0BAAAA,I,sBAAAA,I,gBAAAA,I,wBAAAA,I,0BAAAA,I,0BAAAA,I,0BAAAA,I,wBAAAA,I,sBAAAA,I,wBAAAA,I,sBAAAA,I,0BAAAA,I,sBAAAA,I,wBAAAA,I,oBAAAA,I,oBAAAA,I,oBAAAA,I,sBAAAA,I,sBAAAA,I,kBAAAA,I,oBAAAA,I,wBAAAA,I,wBAAAA,I,wBAAAA,I,0BAAAA,I,wBAAAA,I,0BAAAA,I,wBAAAA,I,oBAAAA,I,wBAAAA,I,yBAAAA,I,yBAAAA,I,uBAAAA,I,yBAAAA,I,2BAAAA,I,iBAAAA,I,2BAAAA,I,uBAAAA,I,uBAAAA,I,yBAAAA,I,yBAAAA,I,2BAAAA,I,yBAAAA,I,uBAAAA,I,uBAAAA,I,2BAAAA,I,yBAAAA,I,yBAAAA,I,yBAAAA,I,yBAAAA,I,2BAAAA,I,uBAAAA,I,2BAAAA,I,2BAAAA,I,2BAAAA,I,yBAAAA,I,qBAAAA,I,2BAAAA,I,uBAAAA,I,yBAAAA,I,yBAAAA,I,uBAAAA,I,uBAAAA,I,yBAAAA,I,yBAAAA,I,uBAAAA,I,yBAAAA,I,yBAAAA,I,yBAAAA,I,uBAAAA,I,uBAAAA,I,2BAAAA,I,uBAAAA,I,2BAAAA,I,yBAAAA,I,2BAAAA,I,2BAAAA,I,uBAAAA,I,2BAAAA,I,mBAAAA,I,uBAAAA,I,mBAAAA,I,uBAAAA,I,yBAAAA,I,2BAAAA,I,2BAAAA,I,qBAAAA,I,2BAAAA,I,mBAAAA,I,yBAAAA,I,2BAAAA,I,yBAAAA,I,2BAAAA,I,yBAAAA,I,uBAAAA,I,2BAAAA,I,uBAAAA,I,2BAAAA,I,2BAAAA,I,iBAAAA,I,2BAAAA,I,uBAAAA,I,yBAAAA,I,uBAAAA,I,uBAAAA,I,2BAAAA,I,2BAAAA,I,2BAAAA,I,+BAAAA,I,uBAAAA,I,yBAAAA,I,qBAAAA,I,yBAAAA,I,eAAAA,I,iBAAAA,I,2BA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","file":"static/js/main.d557b7f8.chunk.js","sourcesContent":["\nexport interface IMonster {\n  name: Monsters;\n  family: Family;\n  locations: (RecruitLocation)[];\n  recipes: (IRecipe)[];\n  asBase: (IRecipe)[];\n  asMate: (IRecipe)[];\n  cobiLocations: (RecruitLocation)[];\n  taraLocations: (RecruitLocation)[];\n  skills: String[];\n  maxLevel: number;\n  experience: number;\n  hp: number;\n  mp: number;\n  attack: number;\n  defence: number;\n  agility: number;\n  intelligence: number;\n}\n\nexport interface IRecipe {\n  base: Monsters | Family;\n  mate: Monsters | Family;\n  result: Monsters;\n  req: Requirement | null;\n}\n\nexport function isMonster(object: any): object is Monsters {\n  return !isFamily(object);//(object as Monsters) !== undefined;\n}\n\nexport function isFamily(object: any): boolean {\n  return JSON.stringify(object).includes('Family');\n}\n\nexport enum Family {\n  SlimeFamily='SlimeFamily',\n  DragonFamily='DragonFamily',\n  BeastFamily='BeastFamily',\n  BirdFamily='BirdFamily',\n  PlantFamily='PlantFamily',\n  BugFamily='BugFamily',\n  DemonFamily='DemonFamily',\n  ZombieFamily='ZombieFamily',\n  MaterialFamily='MaterialFamily',\n  WaterFamily='WaterFamily',\n  BossFamily='BossFamily'\n}\n\nexport function getColorFromFamily(family: Family) {\n  switch (family) {\n    case Family.SlimeFamily: return '#00B0FF';\n    case Family.DragonFamily: return '#E53935';\n    case Family.BeastFamily: return '#795548';\n    case Family.BirdFamily: return '#26C6DA';\n    case Family.PlantFamily: return '#33691E';\n    case Family.BugFamily: return '#C0CA33';\n    case Family.DemonFamily: return '#424242';\n    case Family.ZombieFamily: return '#9E9E9E';\n    case Family.MaterialFamily: return '#FFCA28';\n    case Family.WaterFamily: return '#01579B';\n    case Family.BossFamily: return '#7E57C2';\n    default:\n      return '#ffffff';\n  }\n}\n\nexport enum RecruitLocation {\n  Oasis,\n  Pirate,\n  Ice,\n  Sky,\n  Limbo,\n  Traveler,\n  Elf,\n  Lonely,\n  ForeignMaster,\n}\n\nexport enum Requirement {\n  PlusFive,\n  PlusTen,\n  Link\n}\n\nexport enum RecipeComponentType {\n  Result='as Result',\n  Base='as Base',\n  Mate='as Mate'\n}\n\nexport enum Monsters {\n  // Slime\n  DrakSlime,\n  SpotSlime,\n  WingSlime,\n  TreeSlime,\n  Snaily,\n  SlimeNite,\n  Babble,\n  BoxSlime,\n  PearlGel,\n  Slime,\n  Healer,\n  FangSlime,\n  RockSlime,\n  SlimeBorg,\n  Slabbit,\n  KingSlime,\n  Metaly,\n  Metabble,\n  SpotKing,\n  TropicGel,\n  MimeSlime,\n  HaloSlime,\n  MetalKing,\n  GoldSlime,\n  GranSlime,\n  WonderEgg,\n\n  // Dragon\n  DragonKid,\n  Tortragon,\n  Pteranod,\n  Gasgon,\n  FairyDrak,\n  LizardMan,\n  Poisongon,\n  Swordgon,\n  Drygon,\n  Dragon,\n  MiniDrak,\n  MadDragon,\n  RayBurn,\n  Chamelgon,\n  LizardFly,\n  Andreal,\n  KingCobra,\n  Vampirus,\n  SnakeBat,\n  Spikerous,\n  GreatDrak,\n  Crestpent,\n  WingSnake,\n  Coatol,\n  Orochi,\n  BattleRex,\n  SkyDragon,\n  Serpentia,\n  Divinegon,\n  Orligon,\n  GigaDraco,\n\n  // Beast\n  Tonguella,\n  Almiraj,\n  CatFly,\n  PillowRat,\n  Saccer,\n  GulpBeast,\n  Skullroo,\n  WindBeast,\n  Beavern,\n  AntBear,\n  SuperTen,\n  IronTurt,\n  Mommonja,\n  HammerMan,\n  Grizzly,\n  Yeti,\n  ArrowDog,\n  NoctoKing,\n  BeastNite,\n  MadGopher,\n  FairyRat,\n  Unicorn,\n  Goategon,\n  WildApe,\n  Trumpeter,\n  KingLeo,\n  DarkHorn,\n  MadCat,\n  BigEye,\n  Gorago,\n  CatMage,\n  Dumbira,\n\n  // Bird\n  Picky,\n  Wyvern,\n  BullBird,\n  FloraJay,\n  DuckKite,\n  MadPecker,\n  MadRaven,\n  MistyWing,\n  AquaHawk,\n  Dracky,\n  KiteHawk,\n  BigRoost,\n  StubBird,\n  LandOwl,\n  MadGoose,\n  MadCondor,\n  Emyu,\n  Blizzardy,\n  Phoenix,\n  ZapBird,\n  Garudian,\n  WhipBird,\n  FunkyBird,\n  RainHawk,\n  Azurile,\n  Shantak,\n  CragDevil,\n\n  // Plant\n  MadPlant,\n  FireWeed,\n  FloraMan,\n  WingTree,\n  CactiBall,\n  Gulpple,\n  ToadStool,\n  AmberWeed,\n  Slurperon,\n  Stubsuck,\n  Oniono,\n  DanceVegi,\n  TreeBoy,\n  Devipine,\n  FaceTree,\n  HerbMan,\n  BeanMan,\n  EvilSeed,\n  ManEater,\n  Snapper,\n  GhosTree,\n  RoseVine,\n  Egdracil,\n  Warubou,\n  Watabou,\n  Eggplaton,\n  FooHero,\n\n  // Bug\n  GiantSlug,\n  Catapila,\n  Gophecada,\n  Butterfly,\n  WeedBug,\n  GiantWorm,\n  Lipsy,\n  StagBug,\n  Pyuro,\n  ArmyAnt,\n  GoHopper,\n  TailEater,\n  ArmorPede,\n  Eyeder,\n  GiantMoth,\n  Droll,\n  ArmyCrab,\n  MadHornet,\n  Belzebub,\n  WarMantis,\n  HornBeet,\n  Sickler,\n  Armorpion,\n  Digster,\n  Skularach,\n  MultiEyes,\n\n  // Demon\n  Pixy,\n  MedusaEye,\n  AgDevil,\n  Demonite,\n  DarkEye,\n  EyeBall,\n  SkulRider,\n  EvilBeast,\n  Bubblemon,\n  OneEyeClown,\n  Gremlin,\n  ArcDemon,\n  Lionex,\n  GoatHorn,\n  Orc,\n  Ogre,\n  GateGuard,\n  ChopClown,\n  BossTroll,\n  Grendal,\n  Akubar,\n  MadKnight,\n  EvilWell,\n  Gigantes,\n  Centasaur,\n  EvilArmor,\n  Jamirus,\n  Durran,\n  Titanis,\n  LampGenie,\n\n  // Zombie\n  Spooky,\n  Skullgon,\n  PutrePup,\n  RotRaven,\n  Mummy,\n  DarkCrab,\n  DeadNite,\n  Shadow,\n  Skulpent,\n  Hork,\n  Mudron,\n  NiteWhip,\n  WindMerge,\n  Reaper,\n  Inverzon,\n  FoxFire,\n  CaptDead,\n  DeadNoble,\n  WhiteKing,\n  BoneSlave,\n  Skeletor,\n  Servant,\n  Lazamanus,\n  CopyCat,\n  MadSpirit,\n  PomPomBom,\n  Niterich,\n\n  // Material\n  JewelBag,\n  EvilWand,\n  MadCandle,\n  CoilBird,\n  Facer,\n  SpikyBoy,\n  MadMirror,\n  RogueNite,\n  Puppetor,\n  Goopi,\n  Voodoll,\n  MetalDrak,\n  Balzak,\n  SabreMan,\n  CurseLamp,\n  Brushead,\n  Roboster,\n  Roboster2,\n  EvilPot,\n  Gismo,\n  LavaMan,\n  IceMan,\n  Mimic,\n  Exaucers,\n  MudDoll,\n  Golem,\n  StoneMan,\n  BombCrag,\n  GoldGolem,\n  DarkMate,\n  ProtoMech,\n  CloudKing,\n\n  // Water\n  Petiteel,\n  Moray,\n  WalrusMan,\n  RayGigas,\n  Anemon,\n  Aquarella,\n  Merman,\n  Octokid,\n  PutreFish,\n  Octoreach,\n  Angleron,\n  FishRider,\n  RushFish,\n  Gamanian,\n  Clawster,\n  CancerMan,\n  RogueWave,\n  Scallopa,\n  SeaHorse,\n  HoodSquid,\n  MerTiger,\n  AxeShark,\n  Octogon,\n  KingSquid,\n  Digong,\n  WhaleMage,\n  Aquadon,\n  Octoraid,\n  Grakos,\n  Poseidon,\n  Pumpoise,\n  Starfish,\n\n  // Boss\n  DracoLord1,\n  DracoLord2,\n  LordDraco,\n  Hargon,\n  Sidoh,\n  GenoSidoh,\n  Baramos,\n  Zoma,\n  AsuraZoma,\n  Pizzaro,\n  PsychoPiz,\n  Esterk,\n  Mirudraas1,\n  Mirudraas2,\n  Mudou,\n  DeathMore1,\n  DeathMore2,\n  DeathMore3,\n  DarkDrium,\n  Orgodemir1,\n  Orgodemir2,\n  Darck\n}\n\n","import { useHistory } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport { Monsters } from \"../models/Models\";\n\nconst Image = styled.img<{isPsx: boolean, clickNav: boolean}>`\n  min-height: ${props => props.isPsx ? null : '45px'};\n  min-width: ${props => props.isPsx ? null : '45px'};\n  \n  ${props => props.clickNav && css`\n    :hover {\n      cursor: pointer;\n    }\n  `}\n`\n\ntype MonsterImageProps = {\n  monster: Monsters;\n  isPsx?: boolean;\n  clickNav?: boolean;\n}\n\nexport const MonsterImage = ({monster, isPsx=true, clickNav=true}: MonsterImageProps) => {\n  \n  let history = useHistory();\n  return (\n    <div>\n      <Image clickNav={clickNav} isPsx={isPsx} alt={monster.toString()} src={`/dwm2l/assets/${isPsx ? 'psx' : 'gbc'}/${monster.toString().toLowerCase()}.${isPsx ? 'gif' : 'png'}`}\n        onClick={() => {if (clickNav) history.push(`/monster/${monster.toString()}`)}}\n      />\n    </div>\n  )\n};","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Family, getColorFromFamily, IMonster } from '../models/Models';\nimport { MonsterImage } from './MonsterImage';\n\nconst Card = styled.div<{family: Family}>`\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n  transition: 0.3s;\n  /* color: ${props => getColorFromFamily(props.family)}; */\n\n  background-color: ${props => getColorFromFamily(props.family)};\n  color: white;\n  :hover {\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n    cursor: pointer;\n    /* background-color: ${props => getColorFromFamily(props.family)};\n    color: white; */\n    background-color: white;\n    color: ${props => getColorFromFamily(props.family)};\n  }\n\n  padding: 5px;\n  min-width: 75px;\n  min-height: 125px;\n  position:relative;\n  text-align: center;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n\n  border-style: solid;\n  border-radius: 4px;\n  border-color: ${props => getColorFromFamily(props.family)};\n`\n\nconst Name = styled.div`\n  position:absolute;\n  bottom:0;\n`\n\ninterface MonsterListItemProps {\n  monster: IMonster;\n}\n\nexport const MonsterListItem = ({monster}: MonsterListItemProps) => {\n  let history = useHistory();\n  return (\n    <Card family={monster.family} onClick={() => history.push(`/monster/${monster.name.toString()}`)}>\n      <MonsterImage monster={monster.name} />\n      <Name>{monster.name}</Name>\n    </Card>\n  );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { IMonster, Monsters } from '../models/Models';\nimport { MonsterListItem } from './MonsterListItem';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 10px;\n  margin: 5px;\n\n  @media only screen and (min-width: 768px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\ninterface MonsterListProps {\n  monsters: IMonster[];\n}\n\nexport const MonsterList = ({monsters}: MonsterListProps) => {\n  let items: IMonster[] = monsters.sort((a, b) => {\n    const order = Object.values(Monsters);\n    return order.indexOf(a.name) - order.indexOf(b.name);\n  });\n\n  return (\n    <Wrapper>\n      {items.map(x => (\n        <MonsterListItem monster={x} />\n      ))}\n    </Wrapper>\n  )\n}","\nimport { Family, IMonster, Monsters } from './Models';\nimport data from './Monsters.json';\nexport class Library {\n  monsters: IMonster[] = [];\n\n  cobiRecipeTrees: Map<Monsters, IRecipeTreeNode>;\n  taraRecipeTrees: Map<Monsters, IRecipeTreeNode>;\n\n  monstersFoundInTaraVersion: Monsters[];\n  monstersFoundInCobiVersion: Monsters[];\n\n  constructor() {\n    this.monsters = data.monsters as unknown as IMonster[];\n    this.monstersFoundInTaraVersion = data.monstersFoundInTaraVersion as unknown as Monsters[];\n    this.monstersFoundInCobiVersion = data.monstersFoundInCobiVersion as unknown as Monsters[];\n\n\n    this.cobiRecipeTrees = data.cobiRecipeTrees as unknown as Map<Monsters, IRecipeTreeNode>;\n    this.taraRecipeTrees = data.taraRecipeTrees as unknown as Map<Monsters, IRecipeTreeNode>;\n  }\n\n  get(monster: Monsters | string): IMonster {\n    return this.monsters.find(x => x.name.toString().toLowerCase() === monster.toString().toLowerCase())!;\n  }\n}\n\nexport interface IRecipeTreeNode {\n  part: Monsters | Family;\n  base?: IRecipeTreeNode;\n  mate?: IRecipeTreeNode;\n}\n\nexport const library: Library = new Library();","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { MonsterList } from '../components/MonsterList';\nimport { library } from '../models/Library';\nimport { IMonster } from '../models/Models';\n\nconst Input = styled.input`\n  position: fixed;\n  z-index: 3;\n  background-color: #263238;\n  color: white;\n  width: 100%;\n  bottom: 0;\n  height: 50px;\n  text-align: center;\n  border: 0;\n`\n\nexport const MainScreen= () => {\n  const [filter, setFilter] = useState('');\n\n  const monsters: IMonster[] = [];\n  library.monsters.forEach(x => {\n    if (x.name.toString().toLowerCase().includes(filter.toLowerCase())) {\n      monsters.push(x);\n    }\n  });\n  return (\n    <div>\n      <Input onChange={x => setFilter(x.target.value)} placeholder='Filter by name'/>\n      <MonsterList monsters={monsters}/>\n      <div style={{height: '50px'}} />\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nimport { Family, IRecipe, isMonster, Monsters, RecipeComponentType } from \"../models/Models\";\nimport { MonsterImage } from \"./MonsterImage\";\n\nconst RecipeRow = styled.div`\n  * {\n    display:inline-block;\n  }\n`\n\ninterface RecipeListItemProps {\n  recipe: IRecipe;\n  as: RecipeComponentType;\n}\n\nexport const RecipeListItem = ({recipe, as}: RecipeListItemProps) => (\n  \n  <div>\n    {as === RecipeComponentType.Result ?\n      <RecipeRow>\n        <RecipeComponent part={recipe.base}/> + <RecipeComponent part={recipe.mate}/>\n      </RecipeRow>\n    : \n      <RecipeRow>\n        <RecipeComponent part={recipe.base}/> + <RecipeComponent part={recipe.mate}/> = <RecipeComponent part={recipe.result} />\n      </RecipeRow>\n    }\n    \n  </div>\n);\n\ninterface RecipeComponentProps {\n  part: Monsters | Family;\n}\n\nexport const RecipeComponent = ({part}: RecipeComponentProps) => {\n  if (isMonster(part)) {\n    const monster = part as Monsters;\n    return <MonsterImage monster={monster}/>\n  } else {\n    return <div>{part}</div>\n  }\n};","import styled from \"styled-components\";\n\n\nexport const BorderedContainer = styled.div`\n  border-radius: 4px;\n  border-color: black;\n  border-style: solid;\n  margin: 5px;\n`","\nimport { IRecipe, RecipeComponentType } from \"../models/Models\";\nimport { RecipeListItem } from './RecipeListItem';\nimport { BorderedContainer } from './GenericComponents';\n\n\ninterface RecipeListProps {\n  recipes: IRecipe[];\n  as: RecipeComponentType;\n}\nexport const RecipeList = ({recipes, as}: RecipeListProps) => {\n  const items: any = [];\n  recipes.forEach(x => items.push(\n    <RecipeListItem recipe={x} as={as}/>\n  ));\n\n  return (\n    <BorderedContainer>\n      <h3>{as}</h3>\n      <ul>\n        {items}\n      </ul>\n    </BorderedContainer>\n  );  \n}","import styled from \"styled-components\";\nimport { useMediaQuery } from 'react-responsive';\n\nexport const Row = styled.div`\n  &::after {\n    content: \"\";\n    clear: both;\n    display: table;\n  }\n`\n\nexport const Column = styled.div<{span: number}>`\n  float: left;\n  width: 100%;\n  // padding: 15px;\n  @media only screen and (min-width: 768px) {\n    width: ${props => (props.span ? props.span / 12 * 100 : 8.33)}%;\n  }\n`\n\nexport const Mobile = ({ children }: any) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 })\n  return isMobile ? children : null\n}\nexport const Default = ({ children }: any) => {\n  const isNotMobile = useMediaQuery({ minWidth: 768 })\n  return isNotMobile ? children : null\n}","import { IMonster } from \"../models/Models\";\nimport styled from 'styled-components';\nimport { BorderedContainer } from './GenericComponents';\n\ninterface StatsComponentProps {\n  monster: IMonster,\n}\n\nconst Container = styled.div`\n  text-align: left;\n  justify-content: left;\n  display: block-inline;\n`\n\ninterface StatsProps {\n  name: String,\n  stat: number,\n}\n\nconst StatBar = styled.div<{stat: number}>`\n  display: inline-block;\n  width: ${props => (props.stat/31)*100}%;\n  background-color: ${props => {\n    if (props.stat > 28) {\n      return '#FF5722'\n    }\n    else if (props.stat > 20) {\n      return '#FB8C00'\n    }\n    else if (props.stat > 10) {\n      return '#FDD835'\n    }\n    else if (props.stat > 5) {\n      return '#7CB342'\n    }\n    else {\n      return '#388E3C';\n    }\n  }};\n  text-align: left;\n`\n\n// const StatName = styled.div`\n//   width: 75px;\n//   display: inline-block;\n// `\n\nconst StatDisplay = ({name, stat}: StatsProps) => (\n  <div>\n    <Container>\n      {/* <StatName>{name}:</StatName> */}\n      <StatBar stat={stat}>\n        {name}: {stat}\n      </StatBar>\n    </Container>\n  </div>\n)\n\nconst CircleChart = styled.div`\n  border-radius: 100%;\n  background: purple;\n  width: 100px;\n  height: 100px;\n  position: relative;\n`\n\nconst ChartSegment = styled.div<{offset: number, value: number}>`\n  height: 100%;\n  position: absolute;\n  transform: translate(0, -50%) rotate(90deg) rotate(calc(${props => props.offset}* 1deg));\n  transform-origin: 50% 100%;\n  width: 100%;\n  overflow: hidden;\n  \n  :before {\n    background: rgba(255,0,0,.5);\n    content: '';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    transform: translate(0, 100%) rotate(calc(${props => props.value} * 1deg));\n    transform-origin: 50% 0;\n  }\n`\n\n//for stats, 0 is poor, 15 is average, and 31 is good\n// except for exp in which case 0 is good, 15 is average and 31 is bad\n\nexport const StatsComponent = ({monster}: StatsComponentProps) => (\n  <BorderedContainer>\n    <div>MaxLevel: {monster.maxLevel}</div>\n    {/* <CircleChart>\n      <ChartSegment offset={0} value={60}/>\n      <ChartSegment offset={90} value={90}/>\n    </CircleChart> */}\n    <StatDisplay name='Experience' stat={31-monster.experience} />\n    <StatDisplay name='HP' stat={monster.hp} />\n    <StatDisplay name='MP' stat={monster.mp} />\n    <StatDisplay name='Attack' stat={monster.attack} />\n    <StatDisplay name='Defence' stat={monster.defence} />\n    <StatDisplay name='Agility' stat={monster.agility} />\n    <StatDisplay name='Intelligence' stat={monster.intelligence} />\n  </BorderedContainer>\n)","import { IMonster } from \"../models/Models\";\nimport { BorderedContainer } from './GenericComponents';\n\ninterface LocationProps {\n  monster: IMonster,\n}\n\nexport const LocationsComponent = ({monster}: LocationProps) => (\n  <BorderedContainer>\n    <h2>Locations</h2>\n    {monster.locations.length === 0 && monster.taraLocations.length === 0 && monster.cobiLocations.length === 0 &&\n      <p>Not found in any of the story key worlds</p>\n    }\n    {monster.locations.length > 0 && <p>Both versions: {monster.locations.join(', ')}</p>}\n    {monster.taraLocations.length > 0 && <p>Tara Only: {monster.taraLocations.join(', ')}</p>}\n    {monster.cobiLocations.length > 0 && <p>Cobi Only: {monster.cobiLocations.join(', ')}</p>}\n  </BorderedContainer>\n)","import { IMonster } from \"../models/Models\";\nimport { BorderedContainer } from './GenericComponents';\n\ninterface SkillsProps {\n  monster: IMonster,\n}\n\nexport const SkillsComponent = ({monster}: SkillsProps) => (\n  <BorderedContainer>\n    <h2>Skills</h2>\n    {monster.skills.map(x => (\n      <p>{x}</p>\n    ))}\n  </BorderedContainer>\n)","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { library } from '../models/Library';\nimport { Family, getColorFromFamily, Monsters, isFamily } from '../models/Models';\nimport { MonsterImage } from './MonsterImage';\n\nconst Card = styled.div<{family: Family}>`\n  background-color: ${props => getColorFromFamily(props.family)};\n  color: white;\n  min-width: 150px;\n  height: 150px;\n  position:relative;\n  text-align: center;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Select = styled.select`\n  max-width: 100%;\n  position: absolute;\n  bottom:0;\n`\n\nconst ChildContainer = styled.div`\n  width: 100%;\n  display: inline-block;\n`\n\nconst Child = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  \n  * {\n    :hover {\n      z-index: 5;\n    }\n  }\n`\n\nconst FamilyNode = styled.div<{family: Family}>`\n  background-color: ${props => getColorFromFamily(props.family)};\n  height: 150px;\n  min-width: 150px;\n  color: white;\n  text-align: center;\n\n  * {\n    :hover {\n      z-index: 5;\n    }\n  }\n`\n\n\ninterface RecipeTreeNodeProps {\n  part: Monsters | Family;\n}\n\nexport const RecipeTreeNode = ({part}: RecipeTreeNodeProps) => {\n  const [recipeIndex, setRecipeIndex] = useState(-1);\n\n\n  // when part changes for the component, reset the selection\n  useEffect(() => {\n    setRecipeIndex(-1)\n  }, [part]);\n\n  // part can be null if you switch from a deep recipe tree to a shallow one.\n  // in that case don't try to render this \"empty\" child component.\n  if( !part ){\n    return null;\n  }\n  \n  else if (isFamily(part)) {\n    const fam = part as Family;\n    return (\n      <FamilyNode family={fam}>\n        {part}\n      </FamilyNode>\n    );\n  }\n\n  const monster = library.get(part);\n\n  return (\n    <div>\n      <Card family={monster.family}>\n        <MonsterImage monster={monster.name} clickNav={false} />\n        <Select value={recipeIndex} onChange={x => setRecipeIndex(parseInt(x.target.value))}>\n          <option value={-1}>none</option>\n          {monster.recipes.map(x => (\n            <option value={monster.recipes.indexOf(x)}>{x.base} + {x.mate}</option>\n          ))}\n        </Select>\n      </Card>\n    \n      \n      {recipeIndex !== -1 && \n      <ChildContainer>\n        <Child>\n          <RecipeTreeNode part={monster.recipes[recipeIndex]?.base} />\n        </Child> \n        <Child>\n          <RecipeTreeNode part={monster.recipes[recipeIndex]?.mate} />\n        </Child>\n      </ChildContainer>}\n    </div>\n  );\n};","import { IMonster } from \"../models/Models\";\nimport { RecipeTreeNode } from \"./RecipeTreeNode\";\nimport styled from 'styled-components';\n\nconst Tree = styled.div`\n  position:relative;\n  text-align: center;\n  display:flex;\n  width: max-content;\n  min-width: 100%;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 20px;\n`\n\ninterface RecipeTreeProps {\n  monster: IMonster;\n}\n\nexport const RecipeTree = ({monster}: RecipeTreeProps) => {\n  return (\n    <Tree>\n    <RecipeTreeNode part={monster.name} />\n    </Tree>\n  )\n}","import React from 'react';\nimport { Family, getColorFromFamily, IMonster, RecipeComponentType } from '../models/Models';\nimport styled from 'styled-components';\nimport { MonsterImage } from './MonsterImage';\nimport { RecipeList } from './RecipeList';\nimport { Row, Column } from './ResponsiveComponents';\nimport { StatsComponent } from './StatsComponent';\nimport { LocationsComponent } from './LocationsComponent';\nimport { SkillsComponent } from './SkillsComponent';\nimport { RecipeTree } from './RecipeTree';\n\nconst Container = styled.div<{family: Family}>`\n  text-align: center;\n  justify-content: center;\n`\n\nconst Title = styled.h1`\n  margin:0;\n`\n\ninterface MonsterCardProps {\n  monster: IMonster,\n}\n\n\n\nexport const MonsterCard = ({monster}: MonsterCardProps) => (\n  <Container family={monster.family}>\n    <Title>{monster.name} - {monster.family}</Title>\n    <MonsterImage monster={monster.name} />\n    <Row>\n      <Column span={4}>\n        <StatsComponent monster={monster} />\n      </Column>\n      <Column span={4}>\n        <LocationsComponent monster={monster} />\n      </Column>\n      <Column span={4}>\n        <SkillsComponent monster={monster} />\n      </Column>\n    </Row>\n    <Row>\n      <Column span={4}>\n        <RecipeList recipes={monster.recipes} as={RecipeComponentType.Result}/>\n      </Column>\n      <Column span={4}>\n        <RecipeList recipes={monster.asBase} as={RecipeComponentType.Base}/>\n      </Column>\n      <Column span={4}>\n        <RecipeList recipes={monster.asMate} as={RecipeComponentType.Mate}/>\n      </Column>\n    </Row>\n    <RecipeTree monster={monster} />\n\n  </Container>\n);","import React from 'react';\nimport { MonsterCard } from '../components/MonsterCard';\nimport { library } from '../models/Library';\nimport { Monsters } from '../models/Models';\n\ninterface MonsterScreenProps {\n  monster: Monsters;\n}\n\nexport const MonsterScreen = (props: MonsterScreenProps | any) => {\n  let mon = props.monster;\n  if (mon === undefined) {\n    mon = props.match.params.monster;\n  }\n  let monster = library.get(mon);\n  \n  return (\n    <MonsterCard monster={monster} />\n  );\n}\n","import React, { useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history, children } : any) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop);","import { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\"\n\n\nconst Bar = styled.div`\n  position: fixed;\n  z-index: 2;\n  background-color: #263238;\n  width: 100%;\n  top: 0px;\n  text-align: center;\n  padding: 10px;\n`\n\nconst Icon = styled.svg`\n  margin: auto;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const AppBar = () => {\n  let history = useHistory();\n  return (\n    <div>\n      <Bar onClick={() => history.push(`/`)}>\n        <Icon xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" fill='#ffffff'/></Icon>\n      </Bar>\n      <div style={{height: '48px'}}/>\n    </div>\n  );\n}","import React from 'react';\nimport { MainScreen } from './MainScreen';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { MonsterScreen } from './MonsterScreen';\nimport ScrollToTop from './ScrollToTop';\nimport { AppBar } from './AppBar';\n\nfunction App() {\n  return (\n    <Router basename=\"/dwm2l\">\n      <div>\n        <ScrollToTop />\n        <AppBar />\n        <Switch>\n          <Route path='/monster/:monster' component={MonsterScreen} />\n          <Route path=\"/\" component={MainScreen} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}